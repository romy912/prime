plugins {
	id 'java'
	id 'jacoco'
	id 'org.springframework.boot' version '2.7.9'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}
group = 'com.romy'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

jacoco {
	toolVersion = '0.8.8'
	reportsDirectory = layout.buildDirectory.dir('jacocoReportDir')
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.projectlombok:lombok'
	
	implementation 'net.sf.json-lib:json-lib:2.4:jdk15'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	
	implementation 'org.springframework:spring-web:5.3.7'
	implementation 'org.apache.httpcomponents:httpclient:4.5.13'
	
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

bootJar {
    enabled = false
}
jar {
    enabled = true
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
	finalizedBy 'jacocoTestCoverageVerification'
	
	reports {
		xml.required = false
		csv.required = false
		html.required = true
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			enabled = true
			element = 'CLASS'
		}
	}
}